# Copyright (c) 2023-2025, NVIDIA CORPORATION.

[build-system]
build-backend = "setuptools.build_meta"
requires = [
    "setuptools",
    "wheel",
]

[project]
name = "numba-cuda"
dynamic = ["version"]
description = "CUDA target for Numba"
readme = { file = "README.md", content-type = "text/markdown" }
authors = [
    { name = "Anaconda Inc." },
    { name = "NVIDIA Corporation" }
]
license = { text = "BSD 2-clause" }
requires-python = ">=3.9"
dependencies = ["numba>=0.59.1"]

[project.urls]
Homepage = "https://github.com/rapidsai/numba-cuda"
Documentation = "https://github.com/rapidsai/numba-cuda/blob/main/README.md"
Repository = "https://github.com/rapidsai/numba-cuda"
License = "https://github.com/rapidsai/numba-cuda/blob/main/LICENSE"

[tool.setuptools.dynamic]
version = {attr = "numba_cuda.__version__"}

[tool.setuptools]
license-files = ["LICENSE"]

[tool.setuptools.packages.find]
include = ["numba_cuda*"]

[tool.setuptools.package-data]
"*" = ["*.cu", "*.h", "*.hpp", "*.ptx", "*.cuh", "VERSION", "Makefile"]

[tool.ruff]
line-length = 80

[tool.ruff.format]
docstring-code-format = true
docstring-code-line-length = 80

[tool.ruff.lint.pycodestyle]
max-doc-length = 80
max-line-length = 80

[tool.ruff.lint]
ignore = [
    # Extra space in brackets
    "E20",
    # Multiple spaces around ","
    "E231",
    "E241",
    # Comments
    "E26",
    # Assigning lambda expression
    "E731",
    # Ambiguous variable names
    "E741",
]
fixable = ["ALL"]

exclude = [
    "__pycache__",
    ".git",
    "*.pyc",
    "*~",
    "*.o",
    "*.so",
    "*.cpp",
    "*.c",
    "*.h",
    "cuda_bf16.py",
]

[tool.ruff.lint.per-file-ignores]
# Slightly long line in the standard version file
"numba_cuda/_version.py" = ["E501"]
# "Unused" imports / potentially undefined names in init files
"numba_cuda/numba/cuda/__init__.py" = ["F401", "F403", "F405"]
"numba_cuda/numba/cuda/simulator/__init__.py" = ["F401", "F403"]
"numba_cuda/numba/cuda/simulator/cudadrv/__init__.py" = ["F401"]
# Ignore star imports", " unused imports", " and "may be defined by star imports"
# errors in device_init because its purpose is to bring together a lot of
# the public API to be star-imported in numba.cuda.__init__
"numba_cuda/numba/cuda/device_init.py" = ["F401", "F403", "F405"]
# libdevice.py is an autogenerated file containing stubs for all the device
# functions. Some of the lines in docstrings are a little over-long", " as they
# contain the URLs of the reference pages in the online libdevice
# documentation.
"numba_cuda/numba/cuda/libdevice.py" = ["E501"]
# Ignore too-long lines in the doc examples", " prioritising readability
# in the docs over line length in the example source (especially given that
# the test code is already indented by 8 spaces)
"numba_cuda/numba/cuda/tests/doc_examples/test_random.py" = ["E501"]
"numba_cuda/numba/cuda/tests/doc_examples/test_cg.py" = ["E501"]
"numba_cuda/numba/cuda/tests/doc_examples/test_matmul.py" = ["E501"]
"numba_cuda/numba/tests/doc_examples/test_interval_example.py" = ["E501"]
