# SPDX-FileCopyrightText: Copyright (c) 2025 NVIDIA CORPORATION & AFFILIATES. All rights reserved.
# SPDX-License-Identifier: BSD-2-Clause

name: "CI: Test wheel on Windows"

on:
  workflow_call:
    inputs:
      sha:
        type: string
      repo:
        type: string
      script:
        type: string
        default: "./ci/test_wheel.ps1"

jobs:
  compute-matrix:
    runs-on: ubuntu-latest
    outputs:
      MATRIX: ${{ steps.compute-matrix.outputs.MATRIX }}
    steps:
      - name: Compute Python Test Matrix
        id: compute-matrix
        run: |
          set -eo pipefail
          export TEST_MATRIX="{ ARCH: 'amd64', PY_VER: '3.12', CUDA_VER: '12.8.0' }"
          MATRIX=$(yq -n -o json 'env(TEST_MATRIX)' | jq -c)
          echo "MATRIX=${MATRIX}" | tee --append "${GITHUB_OUTPUT}"
  tests:
    name: ${{ matrix.CUDA_VER }}, ${{ matrix.PY_VER }}, ${{ matrix.ARCH }}, windows
    needs: compute-matrix
    strategy:
      fail-fast: false
      matrix: ${{ fromJSON('{"ARCH":["amd64"],"PY_VER":["3.12"],"CUDA_VER":["12.8.0"]}') }}
    runs-on: "cuda-python-windows-gpu-github"
    steps:
      - uses: actions/checkout@v4
        with:
          repository: ${{ inputs.repo }}
          ref: ${{ inputs.sha }}
          fetch-depth: 0

      - name: Update driver
        run: |
          .github/workflows/install_gpu_driver.ps1

      - name: Ensure GPU is working
        run: nvidia-smi

      - uses: actions/download-artifact@v4
        name: wheel

      - name: Display structure of downloaded files
        run: Get-ChildItem -Recurse

      - name: Set up Python ${{ matrix.PY_VER }}
        uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065  # v5.6.0
        with:
          python-version: ${{ matrix.PY_VER }}

      - name: Download fixed llvmlite wheel
        uses: actions/download-artifact@v4
        with:
          artifact-ids: 4137350031
          path: wheel-artifacts
          repository: numba/llvmlite
          run-id: 18111409657
          github-token: ${{ github.token }}

      - name: Extract fixed llvmlite wheel
        run: |
          # Extract the wheel from the downloaded artifact
          # This addresses the llvmlite 0.45.0 Windows wheel dependency issue
          # See: https://github.com/numba/llvmlite/issues/1297
          Write-Host "Checking for downloaded artifacts..."
          Get-ChildItem -Path "wheel-artifacts" -Recurse

          # Look for the wheel file directly in the wheel-artifacts directory
          $wheelFile = Get-ChildItem -Path "wheel-artifacts" -Filter "*.whl" -Recurse | Select-Object -First 1

          if ($wheelFile) {
            Copy-Item $wheelFile.FullName "llvmlite-fixed.whl"
            Write-Host "Fixed llvmlite wheel ready: llvmlite-fixed.whl"
            Write-Host "Wheel file: $($wheelFile.FullName)"
          } else {
            Write-Host "No wheel file found in artifact"
            Write-Host "Available files:"
            Get-ChildItem -Path "wheel-artifacts" -Recurse | ForEach-Object { Write-Host "  $($_.FullName)" }
          }


      - name: Python tests
        run: |
          ${{ inputs.script }}
        env:
          CUDA_VER: ${{ matrix.CUDA_VER }}
