# Copyright (c) 2024, NVIDIA CORPORATION.
name: pr

on:
  push:
    branches:
      - "pull-request/[0-9]+"

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}-${{ github.event_name }}
  cancel-in-progress: true

jobs:
  pr-builder:
    needs:
      - checks
      - compute-matrix
      - build-conda
      - test-conda
      - build-wheels
      - test-wheels
    secrets: inherit
    uses: rapidsai/shared-workflows/.github/workflows/pr-builder.yaml@branch-24.04
  checks:
    secrets: inherit
    uses: rapidsai/shared-workflows/.github/workflows/checks.yaml@branch-24.04
    with:
      enable_check_generated_files: false
  compute-matrix:
    runs-on: ubuntu-latest
    outputs:
      BUILD_MATRIX: ${{ steps.compute-matrix.outputs.BUILD_MATRIX }}
      TEST_MATRIX: ${{ steps.compute-matrix.outputs.TEST_MATRIX }}
    steps:
      - uses: actions/checkout@v4
      - name: Compute Build Matrix
        id: compute-matrix
        uses: ./.github/actions/compute-matrix
  build-conda:
    needs:
      - compute-matrix
    uses: rapidsai/shared-workflows/.github/workflows/conda-python-build.yaml@branch-24.04
    with:
      build_type: pull-request
      script: "ci/build_conda.sh"
      matrix_filter: ${{ needs.compute-matrix.outputs.BUILD_MATRIX }}
  test-conda:
    needs:
      - build-conda
      - compute-matrix
    uses: rapidsai/shared-workflows/.github/workflows/conda-python-tests.yaml@branch-24.04
    with:
      build_type: pull-request
      script: "ci/test_conda.sh"
      matrix_filter: ${{ needs.compute-matrix.outputs.TEST_MATRIX }}
  build-wheels:
    needs:
      - compute-matrix
    uses: rapidsai/shared-workflows/.github/workflows/wheels-build.yaml@branch-24.04
    with:
      build_type: pull-request
      script: "ci/build_wheel.sh"
      matrix_filter: ${{ needs.compute-matrix.outputs.BUILD_MATRIX }}
  test-wheels:
    needs:
      - build-wheels
      - compute-matrix
    uses: rapidsai/shared-workflows/.github/workflows/wheels-test.yaml@branch-24.04
    with:
      build_type: pull-request
      script: "ci/test_wheel.sh"
      matrix_filter: ${{ needs.compute-matrix.outputs.TEST_MATRIX }}
