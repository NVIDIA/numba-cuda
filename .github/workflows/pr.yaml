# SPDX-FileCopyrightText: Copyright (c) 2024 NVIDIA CORPORATION & AFFILIATES. All rights reserved.
# SPDX-License-Identifier: Apache-2.0

name: pr

on:
  push:
    branches:
      - "pull-request/[0-9]+"

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}-${{ github.event_name }}
  cancel-in-progress: true

jobs:
  pr-builder:
    needs:
      - checks
      - compute-matrix
      - build-conda
      - test-conda
      - test-conda-pynvjitlink
      - build-wheels
      - test-wheels
      - test-wheels-pynvjitlink
      - test-wheels-deps-wheels
      - build-docs
    secrets: inherit
    uses: rapidsai/shared-workflows/.github/workflows/pr-builder.yaml@branch-25.04
  checks:
    secrets: inherit
    uses: rapidsai/shared-workflows/.github/workflows/checks.yaml@branch-25.04
    with:
      enable_check_generated_files: false
  compute-matrix:
    runs-on: ubuntu-latest
    outputs:
      BUILD_MATRIX: ${{ steps.compute-matrix.outputs.BUILD_MATRIX }}
      TEST_MATRIX: ${{ steps.compute-matrix.outputs.TEST_MATRIX }}
    steps:
      - uses: actions/checkout@v4
      - name: Compute Matrices
        id: compute-matrix
        run: |
          BUILD_MATRIX="$(yq '.build-matrix' ci/matrix.yml)"
          TEST_MATRIX="$(yq '.test-matrix' ci/matrix.yml)"
          {
            echo 'BUILD_MATRIX<<EOF'
            echo "${BUILD_MATRIX}"
            echo 'EOF'
            echo 'TEST_MATRIX<<EOF'
            echo "${TEST_MATRIX}"
            echo 'EOF'
          } >> "${GITHUB_OUTPUT}"
  build-conda:
    needs:
      - compute-matrix
    uses: ./.github/workflows/conda-python-build.yaml
    with:
      build_type: pull-request
      script: "ci/build_conda.sh"
      matrix: ${{ needs.compute-matrix.outputs.BUILD_MATRIX }}
  test-conda:
    needs:
      - build-conda
      - compute-matrix
    uses: ./.github/workflows/conda-python-tests.yaml
    with:
      build_type: pull-request
      script: "ci/test_conda.sh"
      run_codecov: false
      matrix_filter: ${{ needs.compute-matrix.outputs.TEST_MATRIX }}
  test-conda-pynvjitlink:
    needs:
      - build-conda
      - compute-matrix
    uses: ./.github/workflows/conda-python-tests.yaml
    with:
      build_type: pull-request
      script: "ci/test_conda_pynvjitlink.sh"
      run_codecov: false
      # This selects "ARCH=amd64 and CUDA >=12, with the latest supported Python for each CUDA major version".
      matrix_filter: map(select(.ARCH == "amd64" and (.CUDA_VER | split(".") | .[0] | tonumber >= 12))) | group_by(.CUDA_VER|split(".")|map(tonumber)|.[0]) | map(max_by([(.PY_VER|split(".")|map(tonumber)), (.CUDA_VER|split(".")|map(tonumber))]))
  build-wheels:
    needs:
      - compute-matrix
    uses: ./.github/workflows/wheels-build.yaml
    with:
      build_type: pull-request
      script: "ci/build_wheel.sh"
      matrix: ${{ needs.compute-matrix.outputs.BUILD_MATRIX }}
  test-wheels:
    needs:
      - build-wheels
    uses: ./.github/workflows/wheels-test.yaml
    with:
      build_type: pull-request
      script: "ci/test_wheel.sh false"
  test-wheels-pynvjitlink:
    needs:
      - build-wheels
    uses: ./.github/workflows/wheels-test.yaml
    with:
      build_type: pull-request
      script: "ci/test_wheel_pynvjitlink.sh"
      # This selects "ARCH=amd64 and CUDA >=12, with the latest supported Python for each CUDA major version".
      matrix_filter: map(select(.ARCH == "amd64" and (.CUDA_VER | split(".") | .[0] | tonumber >= 12))) | group_by(.CUDA_VER|split(".")|map(tonumber)|.[0]) | map(max_by([(.PY_VER|split(".")|map(tonumber)), (.CUDA_VER|split(".")|map(tonumber))]))
  test-wheels-deps-wheels:
    needs:
      - build-wheels
    uses: ./.github/workflows/wheels-test.yaml
    with:
      build_type: pull-request
      script: "ci/test_wheel_deps_wheels.sh"
      matrix_filter: map(select(.ARCH == "amd64" and (.CUDA_VER | split(".") | .[0] | tonumber >= 12))) | group_by(.CUDA_VER|split(".")|map(tonumber)|.[0]) | map(max_by([(.PY_VER|split(".")|map(tonumber)), (.CUDA_VER|split(".")|map(tonumber))]))
  build-docs:
    needs:
      - build-conda
    uses: ./.github/workflows/docs-build.yaml
    with:
      build_type: pull-request
